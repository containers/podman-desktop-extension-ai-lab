#
# Copyright (C) 2024 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Podman Desktop AI Lab E2E Nightly
run-name: Podman Desktop AI Lab E2E Nightly ${{ github.event_name == 'push' && '[Recipe change]' || '' }}

on:
  schedule:
    - cron:  '0 2 * * *'
  push:
    paths:
      - 'packages/backend/src/assets/ai.json'
  workflow_dispatch:
    inputs:
      podman_desktop_repo_args:
        default: 'REPO=podman-desktop,FORK=podman-desktop,BRANCH=main'
        description: 'Podman Desktop repo fork and branch'
        type: string
        required: true
      ext_repo_options:
        default: 'REPO=podman-desktop-extension-ai-lab,FORK=containers,BRANCH=main'
        description: 'Podman Desktop Extension repo, fork and branch'
        type: string
        required: true
      ext_tests_options:
        default: 'EXT_RUN_TESTS_FROM_EXTENSION=1,EXT_RUN_TESTS_AS_ADMIN=1'
        description: 'E2E tests options in format VAR1=xxx,VAR2=true,VAR3=15 etc.'
        type: string
        required: true
      npm_target:
        default: 'test:e2e'
        description: 'npm target to run tests'
        type: string
        required: true
      podman_remote_url:
        default: 'https://github.com/containers/podman/releases/download/v5.3.2/podman-5.3.2-setup.exe'
        description: 'podman remote setup exe'
        type: string
        required: true
      podman_options:
        default: 'INIT=1,START=1,ROOTFUL=1,NETWORKING=0'
        description: 'Podman machine configuration options, no spaces'
        type: string
        required: true
      env_vars:
        default: 'TEST_PODMAN_MACHINE=true,ELECTRON_ENABLE_INSPECT=true'
        description: 'Env. Variables passed into target machine, ie: VAR1=xxx,VAR2=true... use EXT_TEST_RAG_CHATBOT=1 to run RAG Chatbot test"'
        type: string
        required: true
      pde2e_image_version:
        default: 'v0.0.3'
        description: 'PDE2E runner, builder, podman image versions'
        type: string
        required: true
      mapt_params:
        default: 'IMAGE=quay.io/redhat-developer/mapt;VERSION_TAG=v0.9.7;CPUS=4;MEMORY=32;EXCLUDED_REGIONS="westindia,centralindia,southindia,australiacentral,australiacentral2,australiaeast,australiasoutheast,southafricanorth,southafricawest"'
        description: 'MAPT image, version tag, cpus and memory request, and excluded regions in format IMAGE=xxx;VERSION_TAG=xxx;CPUS=xxx;MEMORY=xxx;EXCLUDED_REGIONS=xxx'
        required: true
        type: string

jobs:
  windows:
    timeout-minutes: 120
    name: windows-${{ matrix.windows-version }}-${{ matrix.windows-featurepack }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        windows-version: ['10','11']
        windows-featurepack: ['22h2-pro', '24h2-ent']
        exclude:
        - windows-version: '10'
          windows-featurepack: '24h2-ent'
        - windows-version: '11'
          windows-featurepack: '22h2-pro'


    steps:
    - name: Get Podman version used by Desktop
      run: |
        version=$(curl https://raw.githubusercontent.com/containers/podman-desktop/main/extensions/podman/packages/extension/src/podman5.json | jq -r '.version')
        echo "Default Podman Version from Podman Desktop: ${version}"
        echo "PD_PODMAN_VERSION=${version}" >> $GITHUB_ENV

    - name: Set the default env. variables
      env:
        DEFAULT_PODMAN_DESKTOP_REPO_ARGS: 'REPO=podman-desktop,FORK=podman-desktop,BRANCH=main'
        DEFAULT_NPM_TARGET: 'test:e2e'
        DEFAULT_ENV_VARS: 'TEST_PODMAN_MACHINE=true,ELECTRON_ENABLE_INSPECT=true'
        DEFAULT_PODMAN_OPTIONS: 'INIT=1,START=1,ROOTFUL=1,NETWORKING=0'
        DEFAULT_EXT_TESTS_OPTIONS: 'EXT_RUN_TESTS_FROM_EXTENSION=1,EXT_RUN_TESTS_AS_ADMIN=1'
        DEFAULT_EXT_REPO_OPTIONS: 'REPO=podman-desktop-extension-ai-lab,FORK=containers,BRANCH=main'
        DEFAULT_PODMAN_VERSION: "${{ env.PD_PODMAN_VERSION || '5.6' }}"
        DEFAULT_URL: "https://github.com/containers/podman/releases/download/v$DEFAULT_PODMAN_VERSION/podman-$DEFAULT_PODMAN_VERSION-setup.exe"
        DEFAULT_PDE2E_IMAGE_VERSION: 'v0.0.3-windows'
        DEFAULT_MAPT_PARAMS: "IMAGE=${{ vars.MAPT_IMAGE || 'quay.io/redhat-developer/mapt' }};VERSION_TAG=${{ vars.MAPT_VERSION_TAG || 'v0.9.7' }};CPUS=${{ vars.MAPT_CPUS || '4' }};MEMORY=${{ vars.MAPT_MEMORY || '32' }};EXCLUDED_REGIONS=\"${{ vars.MAPT_EXCLUDED_REGIONS || 'westindia,centralindia,southindia,australiacentral,australiacentral2,australiaeast,australiasoutheast,southafricanorth,southafricawest' }}\""
      run: |
        echo "NPM_TARGET=${{ github.event.inputs.npm_target || env.DEFAULT_NPM_TARGET }}" >> $GITHUB_ENV
        echo "ENV_VARS=${{ github.event.inputs.env_vars || env.DEFAULT_ENV_VARS }}" >> $GITHUB_ENV
        echo "PODMAN_URL=${{ github.event.inputs.podman_remote_url || env.DEFAULT_URL }}" >> $GITHUB_ENV
        echo "PDE2E_IMAGE_VERSION=${{ github.event.inputs.pde2e_image_version || env.DEFAULT_PDE2E_IMAGE_VERSION }}" >> $GITHUB_ENV
        echo "${{ github.event.inputs.podman_desktop_repo_args || env.DEFAULT_PODMAN_DESKTOP_REPO_ARGS }}" | awk -F ',' \
         '{for (i=1; i<=NF; i++) {split($i, kv, "="); print "PD_"kv[1]"="kv[2]}}' >> $GITHUB_ENV
        echo "${{ github.event.inputs.ext_tests_options || env.DEFAULT_EXT_TESTS_OPTIONS }}" | awk -F ',' \
         '{for (i=1; i<=NF; i++) {split($i, kv, "="); print kv[1]"="kv[2]}}' >> $GITHUB_ENV
        echo "${{ github.event.inputs.podman_options || env.DEFAULT_PODMAN_OPTIONS }}" | awk -F ',' \
         '{for (i=1; i<=NF; i++) {split($i, kv, "="); print "PODMAN_"kv[1]"="kv[2]}}' >> $GITHUB_ENV
        echo "${{ github.event.inputs.ext_repo_options || env.DEFAULT_EXT_REPO_OPTIONS }}" | awk -F ',' \
         '{for (i=1; i<=NF; i++) {split($i, kv, "="); print "EXT_"kv[1]"="kv[2]}}' >> $GITHUB_ENV
        echo "${{ github.event.inputs.mapt_params || env.DEFAULT_MAPT_PARAMS }}" | awk -F ';' \
          '{for (i=1; i<=NF; i++) {split($i, kv, "="); print "MAPT_"kv[1]"="kv[2]}}' >> $GITHUB_ENV

    - name: Create instance
      uses: podman-desktop/e2e/.github/actions/create-instance@36e440f2ac18193214f4ffa8f7f1c4c0cb8c9446
      with:
        mapt-image: ${{ env.MAPT_IMAGE || '' }}
        mapt-version: ${{ env.MAPT_VERSION_TAG || '' }}
        windows-version: ${{ matrix.windows-version }}
        windows-featurepack: ${{ matrix.windows-featurepack }}
        cpus: ${{ env.MAPT_CPUS || '' }}
        memory: ${{ env.MAPT_MEMORY || '' }}
        excluded-regions: ${{ env.MAPT_EXCLUDED_REGIONS || '' }}
        arm-tenant-id: ${{ secrets.ARM_TENANT_ID }}
        arm-subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        arm-client-id: ${{ secrets.ARM_CLIENT_ID }}
        arm-client-secret: ${{ secrets.ARM_CLIENT_SECRET }}

    - name: Check instance system info
      uses: podman-desktop/e2e/.github/actions/instance-system-info@3548105f45def129d5e3aaa5a3d922e09ac892d9

    - name: Emulate X session
      uses: podman-desktop/e2e/.github/actions/emulate-x-session@3548105f45def129d5e3aaa5a3d922e09ac892d9

    - name: Download Podman, do not initialize
      uses: podman-desktop/e2e/.github/actions/download-podman-nightly@952cafee20ca82b1ce48b29c848bac1c31062245
      with:
        podman-image-tag: ${{ env.PDE2E_IMAGE_VERSION }}
        podman-download-url: ${{ env.PODMAN_URL }}

    - name: Build Podman Desktop Electron Inspect Enabled binary
      uses: podman-desktop/e2e/.github/actions/build-podman-desktop@0c1f0a035e0949941fd6abf959ab556ceec13f03
      with:
        fork: ${{ env.PD_FORK }}
        branch: ${{ env.PD_BRANCH }}
        env-vars: ${{ env.ENV_VARS }}

    - name: Run Podman Desktop Playwright E2E tests
      uses: podman-desktop/e2e/.github/actions/run-playwright-test@15b800edab941d394b32aaaa3f7961bb7db7ec3a
      with:
        pde2e-runner-tag: ${{ env.PDE2E_IMAGE_VERSION }}
        podman-desktop-path: true
        fork-repo: ${{ env.PD_FORK }}
        branch-name: ${{ env.PD_BRANCH }}
        ext-repo: ${{ env.EXT_REPO }}
        ext-fork: ${{ env.EXT_FORK }}
        ext-branch: ${{ env.EXT_BRANCH }}
        ext-tests: ${{ env.EXT_RUN_TESTS_FROM_EXTENSION }}
        npm-target: ${{ env.NPM_TARGET }}
        podman-init: ${{ env.PODMAN_INIT }}
        podman-start: ${{ env.PODMAN_START }}
        rootful: ${{ env.PODMAN_ROOTFUL }}
        user-networking: ${{ env.PODMAN_NETWORKING }}
        podman-provider: 'wsl'
        env-vars: ${{ env.ENV_VARS }}
        ci-bot-token: ${{ secrets.PODMAN_DESKTOP_BOT_TOKEN }}

    - name: Destroy instance
      if: always()
      uses: podman-desktop/e2e/.github/actions/destroy-instance@36e440f2ac18193214f4ffa8f7f1c4c0cb8c9446
      with:
        mapt-image: ${{ env.MAPT_IMAGE }}
        mapt-version: ${{ env.MAPT_VERSION_TAG }}
        arm-tenant-id: ${{ secrets.ARM_TENANT_ID }}
        arm-subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        arm-client-id: ${{ secrets.ARM_CLIENT_ID }}
        arm-client-secret: ${{ secrets.ARM_CLIENT_SECRET }}

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v5
      if: always()
      with:
        annotate_only: true
        fail_on_failure: true
        include_passed: true
        detailed_summary: true
        require_tests:  true
        report_paths: '**/*results.xml'

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: results-e2e-${{ matrix.windows-version }}${{ matrix.windows-featurepack }}
        path: |
          results/*
          !./**/*.gguf
          !./**/*.bin
          !./**/output/videos/*
          !./**/output/traces/*

    - name: Upload test videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: results-e2e-${{ matrix.windows-version }}${{ matrix.windows-featurepack }}-videos
        path: ./**/output/videos/*

    - name: Upload test traces
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: results-e2e-${{ matrix.windows-version }}${{ matrix.windows-featurepack }}-traces
        path: ./**/output/traces/*
