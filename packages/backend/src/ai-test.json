{
  "recipes": [
    {
      "id": "chatbot",
      "description" : "Chat bot application",
      "name" : "ChatBot",
      "repository": "https://github.com/axel7083/locallm",
      "icon": "natural-language-processing",
      "categories": [
        "natural-language-processing"
      ],
      "config": "chatbot/ai-studio.yaml",
      "readme": "# Locallm\n\nThis repo contains artifacts that can be used to build and run LLM (Large Language Model) services locally on your Mac using podman. These containerized LLM services can be used to help developers quickly prototype new LLM based applications, without the need for relying on any other externally hosted services. Since they are already containerized, it also helps developers move from their prototype to production quicker.     \n\n## Current Locallm Services: \n\n* [Chatbot](#chatbot)\n* [Text Summarization](#text-summarization)\n* [Fine-tuning](#fine-tuning)\n\n### Chatbot\n\nA simple chatbot using the gradio UI. Learn how to build and run this model service here: [Chatbot](/chatbot/).\n\n### Text Summarization\n\nAn LLM app that can summarize arbitrarily long text inputs. Learn how to build and run this model service here: [Text Summarization](/summarizer/).\n\n### Fine Tuning \n\nThis application allows a user to select a model and a data set they'd like to fine-tune that model on. Once the application finishes, it outputs a new fine-tuned model for the user to apply to other LLM services. Learn how to build and run this model training job here: [Fine-tuning](/finetune/).\n\n## Architecture\n![](https://raw.githubusercontent.com/MichaelClifford/locallm/main/assets/arch.jpg)\n\nThe diagram above indicates the general architecture for each of the individual model services contained in this repo. The core code available here is the \"LLM Task Service\" and the \"API Server\", bundled together under `model_services`. With an appropriately chosen model downloaded onto your host, `model_services/builds` contains the Containerfiles required to build an ARM or an x86 (with CUDA) image depending on your need. These model services are intended to be light-weight and run with smaller hardware footprints (given the Locallm name), but they can be run on any hardware that supports containers and scaled up if needed.\n\nWe also provide demo \"AI Applications\" under `ai_applications` for each model service to provide an example of how a developers could interact with the model service for their own needs. ",
      "models": [
        "llama-2-7b-chat.Q5_K_S",
        "albedobase-xl-1.3",
        "sdxl-turbo"
      ]
    }
  ],
  "models": [
    {
      "id": "llama-2-7b-chat.Q5_K_S",
      "name": "Llama-2-7B-Chat-GGUF",
      "description": "Llama 2 is a family of state-of-the-art open-access large language models released by Meta today, and weâ€™re excited to fully support the launch with comprehensive integration in Hugging Face. Llama 2 is being released with a very permissive community license and is available for commercial use. The code, pretrained models, and fine-tuned models are all being released today ðŸ”¥",
      "hw": "CPU",
      "registry": "Hugging Face",
      "license": "?",
      "url": "https://huggingface.co/TheBloke/Llama-2-7B-Chat-GGUF/resolve/main/llama-2-7b-chat.Q5_K_S.gguf"
    },
    {
      "id": "albedobase-xl-1.3",
      "name": "AlbedoBase XL 1.3",
      "description": "Stable Diffusion XL has 6.6 billion parameters, which is about 6.6 times more than the SD v1.5 version. I believe that this is not just a number, but a number that can lead to a significant improvement in performance. It has been a while since we realized that the overall performance of SD v1.5 has improved beyond imagination thanks to the explosive contributions of our community. Therefore, I am working on completing this AlbedoBase XL model in order to optimally reproduce the performance improvement that occurred in v1.5 in this XL version as well. My goal is to directly test the performance of all Checkpoints and LoRAs that are publicly uploaded to Civitai, and merge only the resources that are judged to be optimal after passing through several filters. This will surpass the performance of image-generating AI of companies such as Midjourney. As of now, AlbedoBase XL v0.4 has merged exactly 55 selected checkpoints and 138 LoRAs.",
      "hw": "CPU",
      "registry": "Civital",
      "license": "openrail++",
      "url": ""
    },
    {
      "id": "sdxl-turbo",
      "name": "SDXL Turbo",
      "description": "SDXL Turbo achieves state-of-the-art performance with a new distillation technology, enabling single-step image generation with unprecedented quality, reducing the required step count from 50 to just one.",
      "hw": "CPU",
      "registry": "Hugging Face",
      "license": "sai-c-community",
      "url": ""
    }
  ],
  "categories": [
    {
      "id": "natural-language-processing",
      "name": "Natural Language Processing",
      "description" : "Models that work with text: classify, summarize, translate, or generate text."
    },
    {
      "id": "computer-vision",
      "description" : "Process images, from classification to object detection and segmentation.",
      "name" : "Computer Vision"
    },
    {
      "id": "audio",
      "description" : "Recognize speech or classify audio with audio models.",
      "name" : "Audio"
    },
    {
      "id": "multimodal",
      "description" : "Stuff about multimodal models goes here omg yes amazing.",
      "name" : "Multimodal"
    }
  ]
}
